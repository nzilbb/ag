<?xml version="1.0" encoding="utf-8"?>
<project name="nzilbb.ag" default="all" basedir=".">
  <description>Java implemetation for NZILBB's Annotation Graphs</description>
  <!-- set global properties for this build -->
  <property name="src"     location="."/>
  <property name="javadoc" location="javadoc"/>
  <property name="docs" location="../docs/javadoc"/>
  <property name="build"   location="build_${ant.project.name}"/>
  <property name="dist"    location="../bin"/>
  <property name="srcfiles" value="nzilbb/ag/**/*.java nzilbb/editpath/**/*.java nzilbb/sql/**/*.java nzilbb/configure/**/*.java nzilbb/util/**/*.java nzilbb/media/**/*.java nzilbb/webapp/**/*.java nzilbb/encoding/**/*.java"/> 
  <property name="srctests" value="nzilbb/ag/**/Test*.java nzilbb/util/**/Test*.java nzilbb/sql/**/Test*.java nzilbb/encoding/**/Test*.java"/>
  <property name="srctestseditpath" value="nzilbb/editpath/**/Test*.java"/>
  <property name="junitjar" value="/usr/share/java/junit4.jar"/>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <!-- Get glassfish open-source implementation of javax.json -->    
    <get src="http://www.java2s.com/Code/JarDownload/javax.json/javax.json-1.0.jar.zip" 
	 dest="lib/javax.json-1.0.jar.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/javax.json-1.0.jar.zip" dest="lib"></unzip>
    <move
        file="lib/javax.json-1.0.jar"
        tofile="lib/javax.json.jar"
        />
    <!-- Get derby for command-line RDB -->
    <get src="https://downloads.apache.org/db/derby/db-derby-10.14.2.0/db-derby-10.14.2.0-lib.zip" 
	 dest="lib/db-derby-10.14.2.0-lib.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/db-derby-10.14.2.0-lib.zip" dest="lib">
      <patternset>
        <include name="db-derby-10.14.2.0-lib/lib/*.jar"/>
      </patternset>
    </unzip>
    <move todir="lib">
      <fileset dir="lib/db-derby-10.14.2.0-lib/lib"/>
    </move>
    <!-- Get commons libraries -->
    <get src="https://downloads.apache.org/commons/fileupload/binaries/commons-fileupload-1.4-bin.zip" 
	 dest="lib/commons-fileupload-1.4-bin.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/commons-fileupload-1.4-bin.zip" dest="lib">
      <patternset>
        <include name="commons-fileupload-1.4-bin/commons-fileupload-1.4.jar"/>
      </patternset>
    </unzip>
    <move
        file="lib/commons-fileupload-1.4-bin/commons-fileupload-1.4.jar"
        tofile="lib/commons-fileupload.jar"
        />
    <get src="https://downloads.apache.org/commons/io/binaries/commons-io-2.7-bin.zip" 
	 dest="lib/commons-io-2.7-bin.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/commons-io-2.7-bin.zip" dest="lib">
      <patternset>
        <include name="commons-io-2.7/commons-io-2.7.jar"/>
      </patternset>
    </unzip>
    <move
        file="lib/commons-io-2.7/commons-io-2.7.jar"
        tofile="lib/commons-io.jar"
        />
  </target>
  
  <target name="all" depends="compile,dist">
  </target>
  
  <target name="grammar" depends="init">
    <!--antlr target="${src}/nzilbb/ag/ql/AGQL.g4"/-->
    <java jar="lib/antlr-4.7.2-complete.jar" fork="true" failonerror="true">
      <arg value="${src}/nzilbb/ag/ql/AGQL.g4"/>
    </java>
  </target>
  
  <target name="compile" depends="init,grammar"
          description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
	       classpath="lib/javax.json.jar;lib/antlr-4.7.2-complete.jar;lib/commons-fileupload.jar;lib/derby.jar"
	       includes="${srcfiles}"
	       excludes="${srctests} ${srctestseditpath} **/package-info.java"
	       listfiles="yes"
	       includeantruntime="false"
	       target="8"
	       source="8"
	       debug="on"
	       >
      <compilerarg value="-Xlint"/>
    </javac>
  </target>
  
  <target name="dist" depends="compile"
          description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    
    <!-- Put everything in ${build} into the ${ant.project.name}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" 
	 basedir="${build}"
         comment="${DSTAMP}.${TSTAMP}">
      <manifest>
	<attribute name="Class-Path" value="../commons-fileupload.jar commons-fileupload.jar ../commons-io.jar commons-io.jar ../lib/derby.jar derby.jar"/>
      </manifest>
      
      <!-- include source code -->
      <fileset dir="${src}" includes="${srcfiles}" />
      <!-- include resources -->
      <fileset dir="${src}" includes="nzilbb/**/*.svg nzilbb/ag/**/*.html nzilbb/ag/**/*.css nzilbb/ag/**/*.js" />
      <!-- include this build file -->
      <fileset dir="." includes="build.xml" />
      <!-- include antlr base classes -->
      <zipfileset src="lib/antlr-runtime-4.7.2.jar" />
      
    </jar>
    <delete dir="${build}"/>
  </target>

  <target name="javadoc" depends="init,compile"
          description="Generate javadoc for all source files" >
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}"
             classpath=".;lib/javax.json.jar;lib/antlr-4.7.2-complete.jar;lib/commons-fileupload.jar;lib/derby.jar"
             Author="yes"
             Windowtitle="nzilbb.ag"
             stylesheetfile="doc-files/style.css"
             Overview="nzilbb/ag/overview.html"
             noqualifier="all"
             bottom="&lt;i&gt;&amp;copy; NZILBB - ${TODAY}&lt;/i&gt;"
             >
      <fileset dir="${src}"
               includes="${srcfiles}"
               excludes="nzilbb/**/test/*.java ${srctestseditpath} nzilbb/ag/ql/**/*.java" />
    </javadoc>
  </target>

  <target name="docs" depends="init,compile"
          description="Generate javadoc documentation for public parts of main packages" >
    <mkdir dir="${docs}"/>
    <javadoc destdir="${docs}"
	     classpath=".;lib/javax.json.jar;lib/antlr-4.7.2-complete.jar;lib/commons-fileupload.jar;lib/derby.jar"
             packagenames="nzilbb.ag"
             access="public"
	     Author="yes"
             Windowtitle="nzilbb.ag"
             stylesheetfile="doc-files/style.css"
             Overview="nzilbb/ag/overview.html"
             noqualifier="all"
             bottom="&lt;i&gt;&amp;copy; NZILBB - ${TODAY}&lt;/i&gt;"
             >
      <fileset dir="${src}"
               includes="nzilbb/ag/*.java nzilbb/encoding/*.java nzilbb/ag/util/*.java " />
    </javadoc>
  </target>  

  <target name="test" depends="dist" description="run nzilbb.ag annotation-graph unit tests">
    <javac srcdir="${src}" destdir="."
	       includes="${srctests} ${srctestseditpath}"
	       classpath=".;${junitjar};${dist}/${ant.project.name}.jar;lib/javax.json.jar;lib/antlr-4.7.2-complete.jar;lib/commons-io.jar;lib/commons-fileupload.jar;lib/derby.jar"
	       listfiles="yes"
	       target="8"
	       source="8"
	       debug="on"
	       includeAntRuntime="false"
	       >
      <compilerarg value="-Xlint"/>
    </javac>
    <junit
	    haltonfailure="true"
	    fork="true"
	    >
      <classpath>
	    <pathelement path=".;${dist}/${ant.project.name}.jar;${junitjar};lib/javax.json.jar;lib/antlr-4.7.2-complete.jar;lib/commons-io.jar;lib/commons-fileupload.jar"/>
      </classpath>
      <jvmarg value="-ea"/>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="." includes="${srctestseditpath}"/>
        <fileset dir="." includes="nzilbb/util/**/Test*.java"/>
        <fileset dir="." includes="nzilbb/sql/**/Test*.java"/>
        <fileset dir="." includes="nzilbb/encoding/**/Test*.java"/>
        <fileset dir="." includes="nzilbb/ag/*/Test*.java"/>
        <fileset dir="." includes="nzilbb/ag/util/**/Test*.java" excludes="nzilbb/ag/util/test/TestMerger.java"/>
        <fileset dir="." includes="nzilbb/ag/serialize/**/Test*.java"/>
        <fileset dir="." includes="nzilbb/ag/automation/**/Test*.java"/>        
        <fileset dir="." includes="nzilbb/ag/util/test/TestMerger.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="testmerger" depends="dist" description="run nzilbb.ag.util.Merger unit tests">
    <javac srcdir="${src}" destdir="."
	       includes="nzilbb/ag/util/test/TestMerger.java"
	       classpath=".;${junitjar};lib/javax.json.jar;${dist}/${ant.project.name}.jar"
	       listfiles="yes"
	       target="8"
	       source="8"
	       debug="on"
	       includeAntRuntime="false"
	       >
      <compilerarg value="-Xlint"/>
    </javac>
    <junit
	    haltonfailure="true"
	    fork="true"
	    >
      <classpath>
	    <pathelement path=".;${dist}/${ant.project.name}.jar;lib/javax.json.jar;${junitjar}"/>
      </classpath>
      <jvmarg value="-ea"/>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="." includes="nzilbb/ag/util/test/TestAnchorComparators.java"/>
        <fileset dir="." includes="nzilbb/ag/util/test/TestMerger.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="testql" depends="dist" description="run nzilbb.ag.ql.* unit tests">
    <javac srcdir="${src}" destdir="."
	       includes="nzilbb/ag/ql/test/Test*.java"
	       classpath=".;${junitjar};${dist}/${ant.project.name}.jar;lib/javax.json.jar;lib/antlr-4.7.2-complete.jar"
	       listfiles="yes"
	       target="8"
	       source="8"
	       debug="on"
	       includeAntRuntime="false"
	       >
      <compilerarg value="-Xlint"/>
    </javac>
    <junit
	    haltonfailure="true"
	    fork="true"
	    >
      <classpath>
	    <pathelement path=".;${dist}/${ant.project.name}.jar;${junitjar};lib/javax.json.jar;lib/antlr-4.7.2-complete.jar"/>
      </classpath>
      <jvmarg value="-ea"/>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="." includes="nzilbb/ag/ql/test/Test*.java"/>
      </batchtest>
    </junit>
  </target>
  
  <target name="serializers" description="serializers" depends="compile,dist">
    <ant antfile="praat.xml" inheritAll="false" />
    <ant antfile="transcriber.xml" inheritAll="false" />
    <ant antfile="elan.xml" inheritAll="false" />
    <ant antfile="text.xml" inheritAll="false" />
    <ant antfile="latex.xml" inheritAll="false" />
    <ant antfile="pdf.xml" inheritAll="false" />
    <ant antfile="tei.xml" inheritAll="false" />
    <ant antfile="clan.xml" inheritAll="false" />
    <ant antfile="est.xml" inheritAll="false" />
    <ant antfile="emusdms.xml" inheritAll="false" />
    <ant antfile="webvtt.xml" inheritAll="false" />
    <ant antfile="csv.xml" inheritAll="false" />
  </target>
  <target name="test-serializers" description="serializers" depends="compile,dist">
    <ant antfile="praat.xml" inheritAll="false" target="test" />
    <ant antfile="transcriber.xml" inheritAll="false" target="test" />
    <ant antfile="elan.xml" inheritAll="false" target="test" />
    <ant antfile="text.xml" inheritAll="false" target="test" />
    <ant antfile="latex.xml" inheritAll="false" target="test" />
    <ant antfile="pdf.xml" inheritAll="false" target="test" />
    <ant antfile="tei.xml" inheritAll="false" target="test" />
    <ant antfile="clan.xml" inheritAll="false" target="test" />
    <ant antfile="est.xml" inheritAll="false" target="test" />
    <ant antfile="emusdms.xml" inheritAll="false" target="test" />
    <ant antfile="webvtt.xml" inheritAll="false" target="test" />
    <ant antfile="csv.xml" inheritAll="false" target="test" />
  </target>
  
  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${docs}"/>
    <delete>
      <fileset dir="." includes="**/*.class"/>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>    
    <delete file="${dist}/${ant.project.name}.jar"/>
  </target>
</project>
